#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        Lang_Change: Lang_Change {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE)>;
            label = "LANG_CHANGE";
        };

        bracket: bracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET &kp ENTER &kp LEFT>;
            label = "BRACKET";
        };

        parenthesis: PARENTHESIS {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp ENTER &kp LEFT>;
            label = "PARENTHESIS";
        };

        brace: brace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp RIGHT_BRACE &kp ENTER &kp LEFT>;
            label = "BRACE";
        };

        than: than {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LESS_THAN &kp GREATER_THAN &kp ENTER &kp LEFT>;
            label = "THAN";
        };

        mention: mention {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG1 &kp AT_SIGN &kp SPACE>;
            label = "MENTION";
        };

        double_quote: double_quote {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOUBLE_QUOTES &kp DOUBLE_QUOTES &kp ENTER &kp LEFT>;
            label = "DOUBLE_QUOTE";
        };

        single_quote: single_quote {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE &kp SINGLE_QUOTE &kp ENTER &kp LEFT>;
            label = "SINGLE_QUOTE";
        };

        minus: minus {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG1 &kp MINUS>;
            label = "MINUS";
        };

        period: period {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG1 &kp PERIOD>;
            label = "PERIOD";
        };

        comma: comma {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG1 &kp COMMA>;
            label = "COMMA";
        };

        underscore: underscore {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG1 &kp UNDERSCORE>;
            label = "UNDERSCORE";
        };

        semicolon: semicolon {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG1 &kp SEMICOLON>;
            label = "SEMICOLON";
        };

        colon: colon {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG1 &kp COLON>;
            label = "COLON";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W             &kp E         &kp R         &kp T                                          &kp Y        &kp U  &lt 5 I   &kp O     &kp P
&lt 6 A           &kp S             &kp D         &kp F         &kp G        &kp SEMICOLON      &kp SLASH      &kp H        &kp J  &kp K     &kp L     &lt 6 MINUS
&mt LEFT_SHIFT Z  &kp X             &kp C         &kp V         &kp B        &kp COLON          &kp ESC        &kp N        &kp M  &mkp MB1  &mkp MB2  &mt RIGHT_SHIFT COMMA
&kp LEFT_COMMAND  &kp LEFT_CONTROL  &kp LEFT_ALT  &Lang_Change  &lt 2 SPACE  &lt 1 TAB          &kp BACKSPACE  &lt 3 ENTER                             &lt 5 DOT
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SYMBOL {
            bindings = <
&kp DOLLAR   &kp PERCENT   &kp AMPERSAND  &kp TILDE        &kp CARET                            &kp NON_US_BACKSLASH  &brace        &than              &kp GREATER_THAN  &trans
&kp AT_SIGN  &kp HASH      &kp SLASH      &kp EXCLAMATION  &kp QUESTION  &trans      &mention   &double_quote         &parenthesis  &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE  &kp MINUS
&kp GRAVE    &kp ASTERISK  &kp PLUS       &kp EQUAL        &kp PIPE      &trans      &kp SLASH  &single_quote         &bracket      &kp SEMICOLON      &kp COLON         &kp UNDERSCORE
&trans       &trans        &trans         &trans           &trans        &trans      &trans     &trans                                                                   &trans
            >;
        };

        NUM {
            bindings = <
&trans                      &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS                                                &kp CARET    &kp AMPERSAND  &kp EQUAL  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp KP_NUMBER_0             &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp MINUS  &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &underscore  &colon         &kp HASH   &kp AT_SIGN           &kp PERCENT
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &period    &comma                       &trans          &period      &comma         &kp SLASH  &kp ASTERISK          &kp BACKSLASH
&trans                      &trans           &trans           &trans           &trans     &trans                       &trans          &trans                                                       &kp ESC
            >;
        };

        TEXT-EDIT {
            bindings = <
&kp ESCAPE     &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans    &trans            &trans    &trans             &kp DELETE
&kp PAGE_UP    &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans    &kp LS(LG(LEFT))  &kp UP    &kp LG(LS(RIGHT))  &trans
&kp PAGE_DOWN  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &kp HOME  &kp LEFT          &kp DOWN  &kp RIGHT          &kp END
&trans         &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                                                   &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans          &kp F10               &trans  &trans  &trans                                                             &kp LG(NUMBER_1)  &kp LS(LG(NON_US_BACKSLASH))  &trans                &trans                 &trans
&kp LS(LG(N5))  &kp LS(LG(NUMBER_4))  &trans  &trans  &kp LG(SPACE)         &trans                     &trans            &kp LG(NUMBER_2)  &kp LG(NUMBER_4)              &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)  &trans
&trans          &trans                &trans  &trans  &kp LG(SPACE)         &trans                     &trans            &kp LG(NUMBER_3)  &trans                        &mkp MB1              &mkp MB2               &trans
&trans          &trans                &trans  &trans  &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)      &kp LC(NUMBER_1)  &kp LC(NUMBER_2)                                                                             &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
